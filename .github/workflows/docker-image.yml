name: CI â€” Build & Push Docker Images

on:
  push:
    branches: [ "main", "develop", "feat/**" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ${{ secrets.REGISTRY || 'ghcr.io' }}
  IMAGE_NAMESPACE: ${{ secrets.IMAGE_NAMESPACE || format('ghcr.io/{0}', toLower(github.repository)) }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    concurrency:
      group: docker-${{ github.ref }}-${{ matrix.service }}
      cancel-in-progress: true

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - service: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
          - service: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Rewrite base images to GHCR mirrors
        shell: bash
        run: |
          rewrite() {
            [ -f "$1" ] || return 0
            sed -i \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(node:\)#FROM ghcr.io/library/\2#g' \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(python:\)#FROM ghcr.io/library/\2#g' \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(nginx:\)#FROM ghcr.io/library/\2#g' \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(alpine:\)#FROM ghcr.io/library/\2#g' \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(debian:\)#FROM ghcr.io/library/\2#g' \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(ubuntu:\)#FROM ghcr.io/library/\2#g' \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(golang:\)#FROM ghcr.io/library/\2#g' \
              -e 's#^FROM \([[:alnum:]/.-]*\)\(busybox:\)#FROM ghcr.io/library/\2#g' \
              "$1"
          }
          rewrite "./backend/Dockerfile"
          rewrite "./frontend/Dockerfile"

      - name: Docker Login (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAMESPACE }}-${{ matrix.service }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=tag
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ matrix.service }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}
